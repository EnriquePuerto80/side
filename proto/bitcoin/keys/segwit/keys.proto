syntax = "proto3";
package bitcoin.keys.segwit;

import "amino/amino.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/sideprotocol/side/bitcoin/keys/segwit";

message PubKey {
  option (amino.name) = "bitcoin/PubKeySegWit";
  // The Amino encoding is simply the inner bytes field, and not the Amino
  // encoding of the whole PubKey struct.
  //
  // Example (JSON):
  // s := PubKey{Key: []byte{0x01}}
  // out := AminoJSONEncoder(s)
  //
  // Then we have:
  // out == `"MQ=="`
  // out != `{"key":"MQ=="}`
  option (amino.message_encoding)     = "key_field";
  option (gogoproto.goproto_stringer) = false;

  bytes key = 1;
}

// PrivKey defines a SegWit private key.
message PrivKey {
  option (amino.name)             = "bitcoin/PrivKeySegWit";
  option (amino.message_encoding) = "key_field";

  bytes key = 1;
}
