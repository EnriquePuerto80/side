syntax = "proto3";
package side.yield;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/sideprotocol/side/x/yield/types";

// Msg defines the Msg service.
service Msg {
  rpc RegisterHostChain (MsgRegisterHostChain) returns (MsgRegisterHostChainResponse);
}
message MsgRegisterHostChain {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string connection_id = 1 [ (gogoproto.moretags) = "yaml:\"connection_id\"" ];
  string bech32prefix = 2;
  string host_denom = 3 [ (gogoproto.moretags) = "yaml:\"host_denom\"" ];
  string ibc_denom = 4 [ (gogoproto.moretags) = "yaml:\"ibc_denom\"" ];
  string creator = 5;
  string transfer_channel_id = 6
      [ (gogoproto.moretags) = "yaml:\"transfer_channel_id\"" ];
}

message MsgRegisterHostChainResponse {}

